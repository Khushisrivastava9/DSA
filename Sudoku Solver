#include <bits/stdc++.h>
using namespace std;
bool issafe(int row,int col,vector<vector<int>>& board,int val){
    for(int i=0;i<9;i++){
        //row check
        if(board[row][i]==val){
            return false;
        }
        //col check
        if(board[i][col]==val){
            return false;
        }
        //3*3 matrix check
        if(board[3*(row/3)+i/3][3*(col/3)+i%3]==val){
            return false;
        }
    }
    return true;
}
bool solve(vector<vector<int>>& board){
    //comes inside matrix using nested for loops
    for(int row=0;row<9;row++){
        for(int col=0;col<9;col++){
            //check for missing digit
            if(board[row][col]==0){
                //use for loop to get exact no. which can be placed and it' validity
                for(int val=1;val<10;val++){
                    //if valid or not
                    if(issafe(row,col,board,val)){
                        //place the safe no.
                        board[row][col]=val;
                        //recursive call
                        bool issolvepossible=solve(board);
                        if(issolvepossible){
                            return true;
                        }
                        else{
                            //bactrack
                            board[row][col]=0;
                        }
                    }
                }
                return false;
            }
        }
    }
    return true;
}
void solveSudoku(vector<vector<int>>& sudoku)
{
	// Write your code here
    // No need to print the final sudoku
    // Just fill the values in the given matrix
    solve(sudoku);
}
